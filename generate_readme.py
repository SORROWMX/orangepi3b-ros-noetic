#!/usr/bin/env python3
"""
–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä README –¥–ª—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è ROS Noetic –ø–∞–∫–µ—Ç–æ–≤
"""

import os
import glob
from datetime import datetime

def count_deb_files():
    """–ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ .deb —Ñ–∞–π–ª–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    deb_files = glob.glob("*.deb")
    return len(deb_files), deb_files

def categorize_packages(deb_files):
    """–ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∏—Ä—É–µ—Ç –ø–∞–∫–µ—Ç—ã –ø–æ —Ç–∏–ø–∞–º"""
    categories = {
        'core': [],
        'communication': [],
        'build_system': [],
        'messages': [],
        'tf': [],
        'image': [],
        'utilities': [],
        'debug': [],
        'other': []
    }
    
    for file in deb_files:
        filename = file.lower()
        if 'ros-core' in filename or 'ros-base' in filename or 'ros-comm' in filename or 'ros_' in filename:
            categories['core'].append(file)
        elif 'roscpp' in filename or 'rospy' in filename or 'rosgraph' in filename or 'rosmaster' in filename:
            categories['communication'].append(file)
        elif 'catkin' in filename or 'cmake' in filename or 'rospack' in filename or 'rosbuild' in filename:
            categories['build_system'].append(file)
        elif 'msgs' in filename and 'dbgsym' not in filename:
            categories['messages'].append(file)
        elif 'tf' in filename and 'dbgsym' not in filename:
            categories['tf'].append(file)
        elif 'image' in filename or 'camera' in filename or 'opencv' in filename:
            categories['image'].append(file)
        elif 'rosbag' in filename or 'roslaunch' in filename or 'roswtf' in filename:
            categories['utilities'].append(file)
        elif 'dbgsym' in filename:
            categories['debug'].append(file)
        else:
            categories['other'].append(file)
    
    return categories

def generate_readme():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç README.md —Ñ–∞–π–ª"""
    total_count, deb_files = count_deb_files()
    categories = categorize_packages(deb_files)
    current_date = datetime.now().strftime("%Y-%m-%d")
    
    readme_content = f"""# Orange Pi 3B - ROS Noetic Packages

–≠—Ç–æ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã ROS Noetic –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã ARM64, —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–ª—è –æ–¥–Ω–æ–ø–ª–∞—Ç–Ω—ã—Ö –∫–æ–º–ø—å—é—Ç–µ—Ä–æ–≤ Orange Pi 3B –ø–æ–¥ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º Ubuntu 20.04 (Focal Fossa).

## üì¶ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞–∫–µ—Ç–æ–≤

- **–í—Å–µ–≥–æ .deb —Ñ–∞–π–ª–æ–≤**: {total_count}
- **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞**: ARM64 (aarch64)
- **–¶–µ–ª–µ–≤–∞—è –û–°**: Ubuntu 20.04 Focal Fossa
- **–î–∏—Å—Ç—Ä–∏–±—É—Ü–∏—è ROS**: Noetic Ninjemys
- **–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è**: {current_date}

## üöÄ –ß—Ç–æ –≤–∫–ª—é—á–µ–Ω–æ

–≠—Ç–æ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ ROS Noetic, –≤–∫–ª—é—á–∞—è:

### –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã ROS ({len(categories['core'])} –ø–∞–∫–µ—Ç–æ–≤)
- `ros-noetic-ros-core` - –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å ROS
- `ros-noetic-ros-base` - –ë–∞–∑–æ–≤–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ ROS
- `ros-noetic-ros-comm` - –ë–∏–±–ª–∏–æ—Ç–µ–∫–∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ ROS
- `ros-noetic-ros` - –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–∞–ø–∞–∫–µ—Ç ROS

### –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ ({len(categories['communication'])} –ø–∞–∫–µ—Ç–æ–≤)
- roscpp, rospy, rosgraph, rosmaster
- rosparam, rostopic, rosservice, rostest

### –°–∏—Å—Ç–µ–º–∞ —Å–±–æ—Ä–∫–∏ ({len(categories['build_system'])} –ø–∞–∫–µ—Ç–æ–≤)
- catkin, cmake-modules, rospack
- rosmake, rosbuild, rosclean

### –¢–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π ({len(categories['messages'])} –ø–∞–∫–µ—Ç–æ–≤)
- std-msgs, geometry-msgs, sensor-msgs, nav-msgs
- trajectory-msgs, visualization-msgs –∏ –¥—Ä—É–≥–∏–µ

### –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–π ({len(categories['tf'])} –ø–∞–∫–µ—Ç–æ–≤)
- tf, tf2 –∏ –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã tf2

### –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π ({len(categories['image'])} –ø–∞–∫–µ—Ç–æ–≤)
- cv-bridge, image-transport, camera packages
- opencv-tests

### –£—Ç–∏–ª–∏—Ç—ã ({len(categories['utilities'])} –ø–∞–∫–µ—Ç–æ–≤)
- rosbag, roslaunch, roswtf, rosunit

### –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã ({len(categories['debug'])} –ø–∞–∫–µ—Ç–æ–≤)
- –ü–∞–∫–µ—Ç—ã —Å –æ—Ç–ª–∞–¥–æ—á–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏

## üõ† –£—Å—Ç–∞–Ω–æ–≤–∫–∞

### –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
- Orange Pi 3B —Å Ubuntu 20.04 (Focal Fossa)
- –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ ARM64
- –ü—Ä–∞–≤–∞ root –∏–ª–∏ sudo

### –ë—ã—Å—Ç—Ä–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
```bash
# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø–∞–∫–µ—Ç—ã —Å—Ä–∞–∑—É
sudo dpkg -i *.deb

# –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏
sudo apt-get install -f
```

### –í—ã–±–æ—Ä–æ—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
```bash
# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã ROS
sudo dpkg -i ros-noetic-ros-core_*.deb ros-noetic-ros-base_*.deb

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
sudo dpkg -i ros-noetic-ros-comm_*.deb
sudo dpkg -i ros-noetic-tf2_*.deb
```

## üìã –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞–∫–µ—Ç–æ–≤

### –û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–∫–µ—Ç—ã ROS
"""
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤
    for pkg in sorted(categories['core']):
        readme_content += f"- `{pkg}`\n"
    
    readme_content += f"""
### –°–∏—Å—Ç–µ–º–∞ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏
"""
    
    for pkg in sorted(categories['communication']):
        readme_content += f"- `{pkg}`\n"
    
    readme_content += f"""
### –°–∏—Å—Ç–µ–º–∞ —Å–±–æ—Ä–∫–∏
"""
    
    for pkg in sorted(categories['build_system']):
        readme_content += f"- `{pkg}`\n"
    
    readme_content += f"""
### –¢–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π
"""
    
    for pkg in sorted(categories['messages']):
        readme_content += f"- `{pkg}`\n"
    
    readme_content += f"""
### –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–π
"""
    
    for pkg in sorted(categories['tf']):
        readme_content += f"- `{pkg}`\n"
    
    readme_content += f"""
### –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
"""
    
    for pkg in sorted(categories['image']):
        readme_content += f"- `{pkg}`\n"
    
    readme_content += f"""
### –£—Ç–∏–ª–∏—Ç—ã
"""
    
    for pkg in sorted(categories['utilities']):
        readme_content += f"- `{pkg}`\n"
    
    readme_content += f"""
### –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
"""
    
    for pkg in sorted(categories['debug']):
        readme_content += f"- `{pkg}`\n"
    
    readme_content += f"""
### –ü—Ä–æ—á–∏–µ –ø–∞–∫–µ—Ç—ã
"""
    
    for pkg in sorted(categories['other']):
        readme_content += f"- `{pkg}`\n"
    
    readme_content += f"""
## üîß –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

–ü–∞–∫–µ—Ç—ã —Ç—Ä–µ–±—É—é—Ç —Å–ª–µ–¥—É—é—â–∏—Ö —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π:
- `libboost-filesystem1.71.0`
- `libboost-system1.71.0` 
- `libboost-thread1.71.0`
- `python3-catkin-pkg-modules`
- `python3-rosdep-modules`
- `hddtemp` (–¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è)

## üéØ –¶–µ–ª–µ–≤–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ

- **–ü–ª–∞—Ç–∞**: Orange Pi 3B
- **–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä**: ARM Cortex-A53 quad-core
- **–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞**: ARM64 (aarch64)
- **–û–°**: Ubuntu 20.04 LTS Focal Fossa

## üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è

- –í—Å–µ –ø–∞–∫–µ—Ç—ã —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã ARM64
- –°–æ–≤–º–µ—Å—Ç–∏–º—ã —Å Ubuntu 20.04 Focal Fossa
- –í–∫–ª—é—á–∞—é—Ç –∫–∞–∫ —Ä–µ–ª–∏–∑–Ω—ã–µ, —Ç–∞–∫ –∏ –æ—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
- –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–∞–∫–µ—Ç—ã –º–æ–≥—É—Ç —Ç—Ä–µ–±–æ–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

## ü§ù –í–∫–ª–∞–¥ –≤ –ø—Ä–æ–µ–∫—Ç

–≠—Ç–æ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞–∫–µ—Ç—ã. –î–ª—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–æ–¥–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ö–æ–¥–Ω—ã–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è–º ROS Noetic.

## üìÑ –õ–∏—Ü–µ–Ω–∑–∏—è

–≠—Ç–∏ –ø–∞–∫–µ—Ç—ã —Å–ª–µ–¥—É—é—Ç —Ç–µ–º –∂–µ —É—Å–ª–æ–≤–∏—è–º –ª–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–∏—è, —á—Ç–æ –∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è –¥–∏—Å—Ç—Ä–∏–±—É—Ü–∏—è ROS Noetic. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ª–∏—Ü–µ–Ω–∑–∏—è–º –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π.

---

**–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ**: {current_date}  
**–í–µ—Ä—Å–∏—è ROS**: Noetic Ninjemys  
**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞–∫–µ—Ç–æ–≤**: {total_count} .deb —Ñ–∞–π–ª–æ–≤  
**–°–∫—Ä–∏–ø—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏**: generate_readme.py
"""
    
    return readme_content

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è README.md...")
    
    readme_content = generate_readme()
    
    with open("README.md", "w", encoding="utf-8") as f:
        f.write(readme_content)
    
    total_count, _ = count_deb_files()
    print(f"‚úÖ README.md —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
    print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ {total_count} .deb —Ñ–∞–π–ª–æ–≤")
    print(f"üìù –§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ README.md")

if __name__ == "__main__":
    main()
