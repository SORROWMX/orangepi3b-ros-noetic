name: 🔄 Auto-rename Packages (Ubuntu → Debian)

on:
  push:
    branches: [ main, master ]
    paths:
      - '*.deb'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  rename-packages:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Check for focal packages
      id: check-focal
      run: |
        FOCAL_COUNT=$(find debian/pool/main/arm64 -name "*-0focal*.deb" 2>/dev/null | wc -l)
        echo "focal_count=$FOCAL_COUNT" >> $GITHUB_OUTPUT
        echo "Found $FOCAL_COUNT packages with -0focal suffix"

    - name: Create backup
      if: steps.check-focal.outputs.focal_count > 0
      run: |
        echo "📁 Creating backup of original packages..."
        mkdir -p backup_original
        cp debian/pool/main/arm64/*.deb backup_original/ 2>/dev/null || true
        echo "✅ Backup created in backup_original/"

    - name: Make scripts executable
      run: |
        chmod +x *.sh
        echo "✅ Scripts made executable"

    - name: Check current package status
      run: |
        echo "📊 Checking current package status..."
        ./check_packages.sh

    - name: Rename packages
      if: steps.check-focal.outputs.focal_count > 0
      run: |
        echo "🔄 Renaming packages from -0focal to -0bookworm..."
        python3 rename_packages.py

    - name: Clean up duplicate packages
      if: steps.check-focal.outputs.focal_count > 0
      run: |
        echo "🧹 Cleaning up duplicate packages..."
        # Используем автоматический скрипт без подтверждения
        ./cleanup_duplicates_auto.sh
        echo "✅ Duplicate cleanup completed"

    - name: Final package check
      run: |
        echo "📊 Final package status after processing..."
        ./check_packages.sh

    - name: Check for changes
      id: verify-changes
      run: |
        # Проверяем изменения в .deb файлах
        DEB_CHANGES=$(git status --porcelain *.deb 2>/dev/null || true)
        if [ -n "$DEB_CHANGES" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "📝 Package files have been modified"
          echo "Changes:"
          echo "$DEB_CHANGES"
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No package changes needed"
        fi
        
        # Также проверяем общие изменения в репозитории
        ALL_CHANGES=$(git status --porcelain 2>/dev/null || true)
        if [ -n "$ALL_CHANGES" ]; then
          echo "repo_changed=true" >> $GITHUB_OUTPUT
          echo "📝 Repository has changes"
        else
          echo "repo_changed=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No repository changes"
        fi

    - name: Commit and push changes
      if: steps.verify-changes.outputs.changed == 'true' || steps.verify-changes.outputs.repo_changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "🤖 Auto-rename packages for Debian Bookworm

        - Removed old -0focal packages
        - Kept only -0bookworm packages
        - Created backup of original files
        - Optimized for Debian Bookworm (12)
        - Generated by: GitHub Actions"
        
        # Pull latest changes before pushing
        git pull --rebase origin main || git pull --rebase origin master
        git push

    - name: Force commit if no changes detected
      if: steps.verify-changes.outputs.changed == 'false' && steps.verify-changes.outputs.repo_changed == 'false'
      run: |
        echo "🔄 No changes detected, but ensuring repository consistency..."
        git add .
        if [ -n "$(git status --porcelain)" ]; then
          git commit -m "🤖 Auto-update: $(date '+%Y-%m-%d %H:%M:%S') - Repository consistency check"
          git pull --rebase origin main || git pull --rebase origin master
          git push
        else
          echo "ℹ️ No changes to commit"
        fi

    - name: Create summary
      run: |
        echo "## 📦 Package Renaming Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Подсчитываем файлы
        TOTAL_DEB=$(find debian/pool/main/arm64 -name "*.deb" 2>/dev/null | wc -l)
        BOOKWORM_DEB=$(find debian/pool/main/arm64 -name "*-0bookworm*.deb" 2>/dev/null | wc -l)
        FOCAL_DEB=$(find debian/pool/main/arm64 -name "*-0focal*.deb" 2>/dev/null | wc -l)
        
        echo "**Total .deb files:** $TOTAL_DEB" >> $GITHUB_STEP_SUMMARY
        echo "**Packages with -0bookworm:** $BOOKWORM_DEB" >> $GITHUB_STEP_SUMMARY
        echo "**Packages with -0focal:** $FOCAL_DEB" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.verify-changes.outputs.changed }}" == "true" ]; then
          echo "### ✅ Actions Taken" >> $GITHUB_STEP_SUMMARY
          echo "- Packages were renamed for Debian Bookworm compatibility" >> $GITHUB_STEP_SUMMARY
          echo "- Original files were backed up" >> $GITHUB_STEP_SUMMARY
          echo "- Changes were committed and pushed" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ℹ️ Status" >> $GITHUB_STEP_SUMMARY
          echo "- No package renaming needed" >> $GITHUB_STEP_SUMMARY
        fi

    - name: Upload backup as artifact
      if: steps.check-focal.outputs.focal_count > 0
      uses: actions/upload-artifact@v4
      with:
        name: original-packages-backup
        path: backup_original/
        retention-days: 30
