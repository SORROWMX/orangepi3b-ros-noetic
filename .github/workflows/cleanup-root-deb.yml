name: 🧹 Cleanup Root .deb Files

on:
  push:
    branches: [ main, master ]
    paths:
      - '*.deb'
  workflow_dispatch: # Позволяет запускать вручную
  schedule:
    # Запускается каждый день в 8:00 UTC
    - cron: '0 8 * * *'

permissions:
  contents: write

jobs:
  cleanup-root-deb:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Check for .deb files in root
      id: check-deb
      run: |
        # Проверяем наличие .deb файлов в корне
        if ls *.deb 1> /dev/null 2>&1; then
          DEB_COUNT=$(ls *.deb | wc -l)
          echo "deb_count=$DEB_COUNT" >> $GITHUB_OUTPUT
          echo "found=true" >> $GITHUB_OUTPUT
          echo "📦 Found $DEB_COUNT .deb files in root directory"
        else
          echo "deb_count=0" >> $GITHUB_OUTPUT
          echo "found=false" >> $GITHUB_OUTPUT
          echo "ℹ️ No .deb files found in root directory"
        fi

    - name: Create backup of root .deb files
      if: steps.check-deb.outputs.found == 'true'
      run: |
        # Создаем резервную копию
        backup_dir="backup_root_deb_$(date +%Y%m%d_%H%M%S)"
        mkdir -p "$backup_dir"
        
        # Копируем .deb файлы в резервную копию
        cp *.deb "$backup_dir/" 2>/dev/null
        echo "📁 Backup created in $backup_dir/"
        
        # Сохраняем путь к backup для коммита
        echo "backup_dir=$backup_dir" >> $GITHUB_ENV

    - name: Move .deb files to pool
      if: steps.check-deb.outputs.found == 'true'
      run: |
        # Создаем структуру pool если не существует
        mkdir -p debian/pool/main/arm64
        
        # Перемещаем .deb файлы в pool
        echo "📦 Moving .deb files from root to pool..."
        mv *.deb debian/pool/main/arm64/
        
        moved_count=$(ls debian/pool/main/arm64/*.deb | wc -l)
        echo "✅ Moved $moved_count files to debian/pool/main/arm64/"

    - name: Remove any remaining .deb files from root
      if: steps.check-deb.outputs.found == 'true'
      run: |
        # Удаляем оставшиеся .deb файлы из корня
        remaining=$(find . -maxdepth 1 -name "*.deb" | wc -l)
        if [ $remaining -gt 0 ]; then
          echo "🧹 Removing $remaining remaining .deb files from root..."
          find . -maxdepth 1 -name "*.deb" -delete
          echo "✅ Root directory cleaned"
        else
          echo "ℹ️ No remaining .deb files in root"
        fi

    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add all changes
        git add .
        
        # Commit changes
        git commit -m "🧹 Auto-cleanup root .deb files

        📦 Moved ${{ steps.check-deb.outputs.deb_count }} .deb files to debian/pool/main/arm64/
        📁 Backup created in ${{ env.backup_dir }}
        🧹 Cleaned root directory
        📅 Updated: $(date '+%Y-%m-%d %H:%M:%S')
        🔄 Generated by: GitHub Actions"
        
        # Push changes
        git push

    - name: Create summary
      run: |
        echo "## 🧹 Root .deb Cleanup Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.check-deb.outputs.found }}" == "true" ]; then
          echo "### 📦 Files Processed" >> $GITHUB_STEP_SUMMARY
          echo "- **Files found in root:** ${{ steps.check-deb.outputs.deb_count }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Backup created:** ${{ env.backup_dir }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Files moved to pool:** debian/pool/main/arm64/" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.verify-changed-files.outputs.changed }}" == "true" ]; then
            echo "### ✅ Actions Taken" >> $GITHUB_STEP_SUMMARY
            echo "- Root .deb files moved to pool" >> $GITHUB_STEP_SUMMARY
            echo "- Root directory cleaned" >> $GITHUB_STEP_SUMMARY
            echo "- Changes committed and pushed" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ℹ️ Status" >> $GITHUB_STEP_SUMMARY
            echo "- No changes needed" >> $GITHUB_STEP_SUMMARY
          fi
        else
          echo "### ℹ️ Status" >> $GITHUB_STEP_SUMMARY
          echo "- No .deb files found in root directory" >> $GITHUB_STEP_SUMMARY
          echo "- No cleanup needed" >> $GITHUB_STEP_SUMMARY
        fi
